/// <reference types="react" />
import { InputProps } from "@mui/material";
export interface ConditionalOption {
    match: (current: string, previous: string) => boolean;
    options: {
        value: string;
        label: string;
    }[];
}
interface ConditionalAutocompleteProps {
    value: any;
    onChange: (value: any) => void;
    options: ConditionalOption[];
    size?: "small" | "medium";
    InputProps?: InputProps;
    placeholder?: string;
    hideMenu?: boolean;
    onOpen?: (open: boolean) => void;
}
/**
 * ConditionalAutocomplete is a wrapper around MUI Autocomplete to allow or conditional options.
 *
 * Conditional options allows users to provide a match function that can work off of the currently
 *  viewed word along with the previous word to determine whether or not those options should be set on
 *  Autocomplete. Letting the users autocomplete
 */
declare const ConditionalAutocomplete: import("react").ForwardRefExoticComponent<ConditionalAutocompleteProps & import("react").RefAttributes<any>>;
export default ConditionalAutocomplete;
