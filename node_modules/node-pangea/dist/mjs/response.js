const SupportedJSONFields = ["message", "new", "old"];
/**
 * Pangea Response object
 */
export class ResponseObject {
    request_id = "InvalidPayloadReceived";
    request_time = "InvalidPayloadReceived";
    response_time = "InvalidPayloadReceived";
    status = "InvalidPayloadReceived";
    result = {};
    summary = "InvalidPayloadReceived";
    constructor(body) {
        Object.assign(this, body);
    }
}
export class PangeaResponse extends ResponseObject {
    gotResponse;
    success;
    constructor(response) {
        const obj = JSON.parse(JSON.stringify(response.body), parseJSONfields);
        super(obj);
        this.gotResponse = response;
        this.success = this.status === "Success";
    }
}
function parseJSONfields(key, value) {
    if (SupportedJSONFields.includes(key) && typeof value === "string") {
        try {
            // @ts-ignore
            const obj = JSON.parse(value);
            return obj;
        }
        catch (e) {
            return value;
        }
    }
    else {
        return value;
    }
}
export default PangeaResponse;
